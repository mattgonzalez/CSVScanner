/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "base.h"
#include "CSVScanner.h"
#include "BinaryScanner.h"
#include "ValueTreeTest.h"


//==============================================================================
class CSVScannerApplication  : public JUCEApplication
{
public:
    //==============================================================================
    CSVScannerApplication() {}

    const String getApplicationName() override       { return ProjectInfo::projectName; }
    const String getApplicationVersion() override    { return ProjectInfo::versionString; }
    bool moreThanOneInstanceAllowed() override       { return true; }

    //==============================================================================
    void initialise (const String& /*commandLine*/) override
    {
#if CSV
		CSVScanner scanner(commandLine);
		Result result(scanner.scan());
		if (result.failed())
		{
			AlertWindow::showNativeDialogBox("Scanner", result.getErrorMessage(), false);
		}
#endif


#if BINARY
		BinaryScanner scanner(commandLine);
		Result result(scanner.scan());
		if (result.failed())
		{
			AlertWindow::showNativeDialogBox("Scanner", result.getErrorMessage(), false);
		}
#endif

#if VALUE_TREE_TEST
		ValueTreeTest test1("Test1");
		ValueTreeTest test2("Test1");

		test1.tree.addListener(&test2);

		DynamicObject* object = new DynamicObject;
		Identifier foo("Foo");
		Identifier fooObject("FooObject");
		object->setProperty(foo, 1234);
		test1.tree.setProperty(fooObject, object, nullptr);

		object->setProperty(foo, 5678);
		DynamicObject* object2 = test1.tree.getProperty(fooObject).getDynamicObject();
		if (object2)
		{
			int i = object2->getProperty(foo);
			object2->setProperty(foo, 1111);
			test1.tree.sendPropertyChangeMessage(fooObject);
		}

		AlertWindow::showNativeDialogBox("Scanner", "Hi!", false);
#endif

		quit();
    }

    void shutdown() override
    {
        // Add your application's shutdown code here..
    }

    //==============================================================================
    void systemRequestedQuit() override
    {
        // This is called when the app is being asked to quit: you can ignore this
        // request and let the app carry on running, or call quit() to allow the app to close.
        quit();
    }

    void anotherInstanceStarted (const String& /*commandLine*/) override
    {
        // When another instance of the app is launched while this one is running,
        // this method is invoked, and the commandLine parameter tells you what
        // the other instance's command-line arguments were.
    }
};

//==============================================================================
// This macro generates the main() routine that launches the app.
START_JUCE_APPLICATION (CSVScannerApplication)
